<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/views/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!--  viewResolver라는 이름으로 하나의 빈(bean)을 정의하는 코드입니다. 이 빈은 InternalResourceViewResolver 클래스를 사용합니다.
    InternalResourceViewResolver는 Spring MVC에서 사용되는 뷰 리졸버 중 하나로, 주로 JSP 파일을 뷰로 사용할 때 설정합니다.  -->


    <context:component-scan base-package="com.grepp.controller"/>
    <!--   <context:component-scan>: 이 태그는 Spring이 특정 패키지 내에서 자동으로 스프링 빈을 탐색하고 등록하도록 하는 설정입니다.

    base-package: Spring이 자동으로 빈을 등록할 클래스들이 위치한 패키지를 지정합니다.
    여기서는 "com.grepp.controller"로 설정되어 있으며,
    이 패키지 내의 클래스들을 스캔하여 @Controller, @Service, @Repository, @Component 등의 어노테이션이 붙은 클래스를 빈으로 등록합니다. -->

</beans>

        <!--이 파일은 dsipatcherservlet이 관리하는 모든 것들을 담은 파일이다.==어플리케이션 컨텍스트-->
        <!--당신이 만든 servlet-context.xml 파일이 바로 애플리케이션 컨텍스트(Application Context) 중 하나입니다.
        이 파일은 Spring MVC 애플리케이션에서 DispatcherServlet이 사용하는 애플리케이션 컨텍스트를 정의합니다-->
        <!--"애플리케이션 컨텍스트(Application Context)"는 Spring 프레임워크의 핵심 개념 중 하나로, 스프링 애플리케이션에서 모든 빈(Bean)들을 관리하고 조정하는 중앙 역할을-->
        <!--애플리케이션 컨텍스트(Application Context): 빈 팩토리의 확장판으로, 보다 많은 기능(이벤트 처리, 메시지 리소스 관리, AOP 지원 등)을 제공합니다.
        대부분의 스프링 애플리케이션은 이 애플리케이션 컨텍스트를 사용합니다.-->